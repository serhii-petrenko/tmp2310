# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
#
# name: Maven Package
#
# on:
#   push:
#     branches:
#       - main
#   release:
#     types: [created]
#
#
# jobs:
#   build:
#
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#
#     steps:
#     - uses: actions/checkout@v3
#
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#         settings-path: ${{ github.workspace }} # location for the settings.xml file
#
# #     - name: Build with Maven
# #       run: mvn -B package --file pom.xml
#
#     - name: Publish package
#       run: mvn --batch-mode deploy -Dmaven.test.skip
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
# #     - name: Persist workflow data as artifacts
# #       uses: actions/upload-artifact@v3
# #       with:
# #         name: github-actions-artifact
# #         path: target/demo-0.0.1-SNAPSHOT.jar

name: Publish package to GitHub Packages
on:
  push:
    branches: [ main ]
jobs:
  publish:

    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
      #           settings-path: ${{ github.workspace }} # location for the settings.xml file
      #       - name: Build with Maven
      #         run: mvn -B package --file pom.xml

      - name: Publish package
        run: mvn --batch-mode deploy -Dmaven.test.skip
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}


  release-on-push:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
    steps:
      - uses: rymndhng/release-on-push-action@master
        id: release
        with:
          bump_version_scheme: minor
          tag_prefix: "v"

      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"
