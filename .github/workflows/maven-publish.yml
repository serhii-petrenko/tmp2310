# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
#
# name: Maven Package
#
# on:
#   push:
#     branches:
#       - main
#   release:
#     types: [created]
#
#
# jobs:
#   build:
#
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#
#     steps:
#     - uses: actions/checkout@v3
#
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#         settings-path: ${{ github.workspace }} # location for the settings.xml file
#
# #     - name: Build with Maven
# #       run: mvn -B package --file pom.xml
#
#     - name: Publish package
#       run: mvn --batch-mode deploy -Dmaven.test.skip
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
# #     - name: Persist workflow data as artifacts
# #       uses: actions/upload-artifact@v3
# #       with:
# #         name: github-actions-artifact
# #         path: target/demo-0.0.1-SNAPSHOT.jar

name: Publish package to GitHub Packages
on:
  push:
    branches: [ main ]
jobs:

  #  publish:
  #
  #    runs-on: ubuntu-latest
  #
  #    permissions:
  #      contents: read
  #      packages: write
  #
  #    steps:
  #      - uses: actions/checkout@v3
  #
  #      - name: Set up JDK 17
  #        uses: actions/setup-java@v3
  #        with:
  #          java-version: '17'
  #          distribution: 'temurin'
  #          server-id: github
  #      #           settings-path: ${{ github.workspace }} # location for the settings.xml file
  #      #       - name: Build with Maven
  #      #         run: mvn -B package --file pom.xml
  #
  #      - name: Publish package
  #        run: mvn --batch-mode deploy -Dmaven.test.skip
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.TOKEN_TECH }}


  #  release-on-push:
  #    runs-on: ubuntu-latest
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.TOKEN_TECH }}
  #    steps:
  #      - uses: rymndhng/release-on-push-action@master
  #        id: release
  #        with:
  #          bump_version_scheme: minor
  #          tag_prefix: ""


  prepare-release:
    if: github.actor != 'ivan-shevtsov'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          token: ${{ secrets.TOKEN_TECH }}
      - name: Install JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17
          server-id: github
#          server-username: MAVEN_USERNAME
#          server-password: MAVEN_PASSWORD
          cache: 'maven'
      - name: Prepare and tag
        run: |
          git config user.name serhii-petrenko
          git config user.email spetrenko@gmail.com
          
          mvn -V -B release:prepare -DtagNameFormat=@{project.version} -Darguments=-DskipTests -DpushChanges=false
          mvn -V -B release:clean
          
          git push
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_TECH }}
      #          MAVEN_USERNAME: serhii-petrenko
      #          MAVEN_PASSWORD: ${{ secrets.TOKEN_TECH }}


#  publish:
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - uses: actions/checkout@v3.0.2
#      - name: Release
#        uses: softprops/action-gh-release@master
#        with:
#          generate_release_notes: true
#          token: ${{ secrets.TOKEN_TECH }}
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          server-id: github

